// backend\database\prisma\schema.prisma

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Information {
  id        Int      @id @default(autoincrement())
  name      String
  radio     String?
  checkbox  Boolean?
  list      String?
  imagePath String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  avatarPath String?
  isAdmin    Boolean   @default(false)
  posts      Post[]
  followedBy Follow[]  @relation("follower")
  following  Follow[]  @relation("followee")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Comment    Comment[]
}

model Follow {
  id         Int      @id @default(autoincrement())
  follower   User     @relation("follower", fields: [followerId], references: [id])
  followerId Int
  followee   User     @relation("followee", fields: [followeeId], references: [id])
  followeeId Int
  createdAt  DateTime @default(now())
}

model Post {
  id          Int           @id @default(autoincrement())
  userId      Int
  description String
  imagePath   String?
  user        User          @relation(fields: [userId], references: [id])
  comment     Comment[]
  tagsOnPosts TagsOnPosts[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Comment {
  id          String   @id @default(uuid())
  description String
  userId      Int
  postId      Int
  user        User     @relation(fields: [userId], references: [id])
  post        Post     @relation(fields: [postId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id          Int           @id @default(autoincrement())
  name        String
  tagsOnPosts TagsOnPosts[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model TagsOnPosts {
  postId    Int
  tagId     Int
  post      Post     @relation(fields: [postId], references: [id])
  tag       Tag      @relation(fields: [tagId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([postId, tagId])
  @@map("tags_on_posts")
}
